// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
                "marginTop": 64,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "white",
                          "flex": 1,
                          "paddingLeft": 20,
                          "paddingRight": 20,
                        }
                      }
                    >
                      <View>
                        <Text
                          style={
                            Object {
                              "color": "rgba(100,100,100,0.6)",
                              "fontSize": 12,
                            }
                          }
                        >
                          Date
                        </Text>
                        <View
                          accessible={true}
                          focusable={true}
                          isTVSelectable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <Text>
                            20th Mar 2020
                          </Text>
                          <Text
                            style={
                              Object {
                                "backgroundColor": "#10002233",
                                "height": 1,
                                "marginTop": 2,
                              }
                            }
                          />
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 10,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "rgba(100,100,100,0.6)",
                              "fontSize": 12,
                            }
                          }
                        >
                          Timeslot
                        </Text>
                        <View
                          accessible={true}
                          focusable={true}
                          isTVSelectable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <Text>
                            04:30 PM
                          </Text>
                          <Text
                            style={
                              Object {
                                "backgroundColor": "#10002233",
                                "height": 1,
                                "marginTop": 2,
                              }
                            }
                          />
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "backgroundColor": "white",
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "flex": 1,
                                "textAlignVertical": "center",
                              }
                            }
                          >
                            Rooms
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "textAlignVertical": "center",
                                }
                              }
                            >
                              Sort By
                            </Text>
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <RCTPicker
                                items={
                                  Array [
                                    Object {
                                      "label": "Availability",
                                      "textColor": undefined,
                                      "value": "Availability",
                                    },
                                    Object {
                                      "label": "Capacity",
                                      "textColor": undefined,
                                      "value": "Capacity",
                                    },
                                  ]
                                }
                                onChange={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                selectedIndex={0}
                                style={
                                  Array [
                                    Object {
                                      "height": 216,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            data={null}
                            directionalLockEnabled={true}
                            disableVirtualization={false}
                            getItem={[Function]}
                            getItemCount={[Function]}
                            horizontal={false}
                            indicatorStyle="white"
                            initialNumToRender={10}
                            keyExtractor={[Function]}
                            keyboardShouldPersistTaps="handled"
                            maxToRenderPerBatch={25}
                            numColumns={1}
                            onContentSizeChange={[Function]}
                            onEndReachedThreshold={2}
                            onLayout={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            removeClippedSubviews={true}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            showsVerticalScrollIndicator={true}
                            stickyHeaderIndices={Array []}
                            style={
                              Object {
                                "backgroundColor": "white",
                              }
                            }
                            updateCellsBatchingPeriod={0.0005}
                            vertical={true}
                            viewabilityConfigCallbackPairs={Array []}
                            windowSize={10}
                          >
                            <View />
                          </RCTScrollView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#a7a7aa",
                "elevation": 0,
                "flex": 1,
                "shadowColor": "#a7a7aa",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 18,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                    "width": 750,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "black",
                      "flex": 0.9,
                      "fontSize": 20,
                      "textAlign": "center",
                      "textAlignVertical": "center",
                    }
                  }
                >
                  Book a Room
                </Text>
                <View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 25,
                          },
                          Object {
                            "alignContent": "center",
                            "alignItems": "center",
                            "textAlignVertical": "center",
                          },
                          Object {
                            "fontFamily": "simple-line-icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
